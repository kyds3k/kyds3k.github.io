(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))r(e);new MutationObserver(e=>{for(const a of e)if(a.type==="childList")for(const s of a.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&r(s)}).observe(document,{childList:!0,subtree:!0});function n(e){const a={};return e.integrity&&(a.integrity=e.integrity),e.referrerPolicy&&(a.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?a.credentials="include":e.crossOrigin==="anonymous"?a.credentials="omit":a.credentials="same-origin",a}function r(e){if(e.ep)return;e.ep=!0;const a=n(e);fetch(e.href,a)}})();const c="emiktfvokje",p="v7hsD5TZk1sUMipWpt3GijPTm6CuExMO",u=`https://keepthescore.com/api/${c}/player/`,g=`https://keepthescore.com/api/${c}/board/`,b=`https://keepthescore.com/api/${c}/board/round/`;d();document.querySelector(".team-add").addEventListener("click",o=>{o.preventDefault();const t=document.querySelector("#team-name").value,n=document.querySelector("#team-image").value;t?f(t,n):alert("Please enter a team name")});document.querySelector(".gifs-get").addEventListener("click",o=>{o.preventDefault();const t=document.querySelector("#gif-search").value;v(t)});function f(o,t){const n={method:"POST",body:JSON.stringify({team:null,name:o,score:0,profile_image:t}),headers:{"Content-Type":"application/json"}};fetch(u,n).then(r=>{if(!r.ok)throw new Error("Network response was not ok");return r.json()}).then(r=>{console.log("Player created:",r),document.querySelector(".team-add").innerHTML="Team added!",d(),setTimeout(()=>{document.querySelector("#team-name").value="",document.querySelector("#team-image").value="",document.querySelector(".team-image-preview").src="https://media.tenor.com/30iGQ7phGQ4AAAAC/lazy-egg-lazy.gif",document.querySelector(".team-add").innerHTML="Add Team"},2e3)}).catch(r=>{console.error("Error:",r)}),setTimeout(()=>{d()},4e3)}function d(){fetch(g).then(o=>{if(!o.ok)throw new Error("Network response was not ok");return o.json()}).then(o=>{console.log("Board:",o);const t=document.querySelectorAll(".team-list");t.forEach(r=>{r.innerHTML=""}),t.forEach(r=>{o.players.forEach((e,a)=>{const s=a%2===0?"bg-slate-400":"bg-slate-500",l=a==0;r.innerHTML+=`<li data-team="${e.id}" class="flex justify-start align-middle gap-6 team team-${a+1} my-4 p-4 w-full ${s} ${l?"mt-0":""}">
            <img src="${e.profile_image}" alt="${e.name}" class="team-image w-16 h-16 rounded-full">
            <div class="flex flex-col">
              <div class="flex flex-col">
                <div>
                  <label class="cursor-pointer" for="${e.id}">${e.name} (current score: <span class="current-score" data-team="${e.id}">${e.score}</span>)</label>
                </div>
              </div>
              <div class="row flex justify-between team-score" data-team="${e.id}"></div>
            </div>
            <button class="bg-slate-800 hover:bg-slate-900 text-white py-2 px-6 ml-4 rounded self-center team-delete" data-team="${e.id}" data-name="${e.name}">DELETE TEAM</button>
            </div>                   
          </li>`})}),document.querySelectorAll(".team-score").forEach(r=>{const e=r.getAttribute("data-team"),a=`<div class="item">
        <div class="score-ops py-2">
          <div class="flex gap-4">
          <button class="bg-blue-500 hover:bg-blue-700 text-white py-1 px-6 rounded score-change score-minus" data-team="${e}" data-value=".5" data-board="${c}">-.5</button>
          <button class="bg-blue-500 hover:bg-blue-700 text-white py-1 px-6 rounded score-change score-minus" data-team="${e}" data-value="1" data-board="${c}">-1</button>
            <button class="bg-blue-500 hover:bg-blue-700 text-white py-1 px-6 rounded score-change score-minus" data-team="${e}" data-value="5" data-board="${c}">-5</button>
            <input type="number" class="score text-black w-[75px] py-1 px-2 transition-colors" value="0" data-team="${e}" data-board="${c}">            
            <button class="bg-blue-500 hover:bg-blue-700 text-white py-1 px-6 rounded score-change score-plus" data-team="${e}" data-value=".5" data-board="${c}">+.5</button>
            <button class="bg-blue-500 hover:bg-blue-700 text-white py-1 px-6 rounded score-change score-plus" data-team="${e}" data-value="1" data-board="${c}">+1</button>
            <button class="bg-blue-500 hover:bg-blue-700 text-white py-1 px-6 rounded score-change score-plus" data-team="${e}" data-value="5" data-board="${c}">+5</button>            
            <button class="apply-score hidden mt-2 bg-blue-500 hover:bg-blue-700 text-white py-1 px-3 rounded">Apply Score</button>
          </div>
          </div>
        </div>`;r.innerHTML+=a})}).catch(o=>{console.error("Error:",o)})}function h(o,t){const n={method:"DELETE",body:JSON.stringify({token:c,player_id:o})};fetch(u+o,n).then(r=>{if(!r.ok)throw new Error("Network response was not ok");return r}).then(r=>{console.log(`${t} deleted!`),document.querySelectorAll(`li[data-team="${o}"]`).forEach(a=>{a.remove()})}).catch(r=>{console.error("Error:",r)})}function y(o){const t=document.querySelectorAll(`.tab[data-round="${o}"] .score`);console.log(t);const n=document.querySelector(`.submit-results[data-round="${o}"]`);let r=[];t.forEach(s=>{const l=s.getAttribute("data-team"),i=s.value;r.push({player_id:l,score:i})});const e=JSON.stringify({scores:r}),a=new XMLHttpRequest;a.open("POST",b,!0),a.setRequestHeader("Content-Type","application/json"),a.onreadystatechange=function(){a.readyState===4&&(a.status===200?(console.log("Scores added!"),n.innerHTML="Scores submitted!",r.forEach(s=>{document.querySelectorAll(`.current-score[data-team="${s.player_id}"]`).forEach(i=>{const m=Number(i.innerHTML)+Number(s.score);i.innerHTML=m})})):(console.error("Error:",a.statusText),n.innerHTML=`Error: ${a.statusText}`))},a.send(e)}document.querySelector(".round-submit").addEventListener("click",o=>{const t=o.target.getAttribute("data-round");console.log("DRAMATIC SCORE UPDATE"),y(t)});document.addEventListener("click",o=>{if(o.target.classList.contains("score-change")){const t=o.target.getAttribute("data-team");o.target.getAttribute("data-board");const n=o.target.getAttribute("data-value"),r=document.querySelector(`.score[data-team="${t}"]`),e=Number(r.value),a=o.target.classList.contains("score-plus")?e+Number(n):e-Number(n);r.value=a}});function v(o){let t=new XMLHttpRequest;const n=`//api.giphy.com/v1/gifs/search?q=${o}&api_key=${p}&limit=10`;let r;const e=document.querySelector(".gifs-modal-content-inner");e.innerHTML="",t.open("GET",n,!0),t.onload=function(){t.status===200?(r=JSON.parse(t.responseText),console.log(typeof r),r.data.forEach(a=>{let s='<div class="gif-item w-1/4 relative">';s+=`<img src="https://i.giphy.com/media/${a.id}/giphy.webp" alt="${a.title}">`,s+=`<span class="copy-link absolute cursor-pointer bg-gray-400 p-2 rounded top-2 right-2" data-alt="${a.title}" data-link="https://i.giphy.com/media/${a.id}/giphy.webp">Choose image</span>`,s+="</div>",e.innerHTML+=s}),document.querySelector(".gifs-modal").classList.add("active")):console.error("Error:",t.statusText)},t.onerror=function(){console.error("Request failed")},t.send()}document.querySelector(".close").addEventListener("click",()=>{document.querySelector(".gifs-modal").classList.remove("active")});document.addEventListener("click",o=>{if(o.target.classList.contains("copy-link")){const t=o.target.getAttribute("data-link"),n=o.target.getAttribute("data-alt");document.querySelector("#team-image").value=t,document.querySelector(".team-image-preview").src=t,document.querySelector(".team-image-preview").alt=n}});window.setTimeout(function(){document.querySelectorAll(".team-delete").forEach(t=>{t.addEventListener("click",n=>{n.preventDefault(),console.log("SAKUJYO!");const r=t.getAttribute("data-team"),e=t.getAttribute("data-name");h(r,e)})})},2e3);
